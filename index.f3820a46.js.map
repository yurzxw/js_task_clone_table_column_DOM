{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCQA,IAAK,I,EANC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAErC,EAAU,EAAK,GAAG,CAAC,SAAC,CAA1B,EACE,OAAO,EAAI,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,EACnC,GAES,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAC/B,CAAI,CAAC,EAAE,CAAC,YAAY,CAClB,CAAO,CAAC,EAAE,CACV,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAG,EAAE","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar rows = _to_consumable_array(document.querySelectorAll(\"tr\"));\nvar column2 = rows.map(function(row) {\n    return row.children[1].cloneNode(true);\n});\nfor(var i = 0; i < rows.length; i++)rows[i].insertBefore(column2[i], rows[i].children[rows[i].children.length - 1]);\n\n//# sourceMappingURL=index.f3820a46.js.map\n","'use strict';\n\nconst rows = [...document.querySelectorAll('tr')];\n\nconst column2 = rows.map((row) => {\n  return row.children[1].cloneNode(true);\n});\n\nfor (let i = 0; i < rows.length; i++) {\n  rows[i].insertBefore(\n    column2[i],\n    rows[i].children[rows[i].children.length - 1],\n  );\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","rows","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","column2","map","row","children","cloneNode","insertBefore"],"version":3,"file":"index.f3820a46.js.map"}